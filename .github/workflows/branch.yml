name: Branch workflow
env:
  KBC_NODE_VERSION: "16.x"

on:
  push:
    tags-ignore:
      - "*"
    branches:
      - "*"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: "Setup node"
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.KBC_NODE_VERSION }}
          cache: 'yarn'
      - name: "Cache node_modules"
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.KBC_NODE_VERSION }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
      - name: "Install, run tests, build CSS and Storybook"
        run: |
          yarn
          yarn stylelint
          yarn test
          yarn build-dev-css
          yarn build-storybook

  build:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: "Setup node"
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.KBC_NODE_VERSION }}
          cache: 'yarn'
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.KBC_NODE_VERSION }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
      - name: "Install, build library"
        run: |
          yarn
          yarn build-lib

  deploy-storybook:
    if: github.ref == 'refs/heads/main'
    needs:
      - test
      - build
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: "Setup node"
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.KBC_NODE_VERSION }}
          cache: 'yarn'
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.KBC_NODE_VERSION }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
      - name: "Install, build library"
        run: |
          yarn
          yarn prepare-prod-resources
          yarn build-storybook
      - name: "Configure AWS credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: "Deploy to s3"
        run: |
          aws s3 cp build s3://indigo.keboola.com --recursive --exclude "index.html" --acl "public-read" --cache-control "max-age=600"
          aws s3 cp build s3://indigo.keboola.com --recursive --exclude "*" --include "index.html" --acl "public-read" --cache-control "no-cache"

